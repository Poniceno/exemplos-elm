;; User keymap
;; -----------------------------
;; Modify this file to add and subtract keybindings (keyboard shortcuts).
;; Keybindings allow custom keys to invoke any desired LightTable functionality that is behind a command.
;; A keybinding has the following format:
;;
;;   [:TAG "KEYS" :COMMAND]
;;
;; * A tag indicates in what context the keybinding applies. Common tags are :app and :editor which respectively
;;   indicate the keybinding can be used anywhere and the keybinding can only be used when editing text.
;;
;; * Keys are the actual keys you type for the keybinding. Most keybindings start with modifier(s) e.g. alt or control.
;;   Keybindings with modifiers have the format "modifier(s)-key". For example "alt-shift-x" means press alt, shift and x
;;   at once. For more on configuring keys see https://github.com/LightTable/LightTable/blob/master/doc/behavior-and-keymap-configuration.md#keys.
;;
;; * Command is the specific LightTable command(s) to invoke. To search available commands,
;;   start typing a search term after "KEYS". Once you've found the desired command, press TAB to have autocomplete
;;   fill in the command name. For more on configuring commands see https://github.com/LightTable/LightTable/blob/master/doc/behavior-and-keymap-configuration.md#commands-in-keybindings.

[

    [:editor :lt.objs.editor/autoclose-brackets] ; This behavior enables auto close brackets

    [:editor.elm "ctrl-s" :save :elm-format :elm.lint]
    [:editor.elm "alt-f" :elm.select.top.level]
    [:editor.elm "alt-n" :editor.next.lint-result]
    [:editor.elm "alt-p" :editor.prev.lint-result]
    [:editor.elm "f2" :editor.linter.details]

    ;; Create a new tabset (container for tabs)
    [:app "ctrl-shift-t" :tabset.new]

    ;; Move to the next/previous tabset (if more than one)
    [:app "alt-right" :tabset.next]
    [:app "alt-left" :tabset.prev]

    ;; Move to next/prev Tab (within a given tabset)
    [:app "ctrl-pagedown" :tabs.next]
    [:app "ctrl-pageup" :tabs.prev]


    ;; Move a given tab to the next/previous tabset
    [:app "ctrl-shift-right" :tabs.move-next-tabset]
    [:app "ctrl-shift-left" :tabs.move-prev-tabset]


    ;; Move a given TAB to a new tabset to the right of the current tabset
    [:app "alt-t" :tabset.new :tabs.move-next-tabset]

    [:app "ctrl-shift-e" :clear-console :clear-inline-results :editor.linter.remove-all]

    ;; Toggle display of the console
    [:app "alt-c" :toggle-console]

    ;; Toggle display of the workspace tree
    [:app "ctrl-shift-w" :workspace.show]

    [:editor "ctrl-j" :editor.jump-to-definition-at-cursor]
    [:editor "ctrl-shift-j" :editor.unjump]


    ;; Sublime style line kill
    [:editor "alt-backspace" :editor.kill-line]

    ;; Duplicate line
    [:editor "alt-d" :editor.sublime.duplicateLine]


    ;; Multiple cursors. First time selects word, next invocation selects next occurence of selection in Editor
    [:editor "ctrl-g" :editor.sublime.selectNextOccurrence]

    ;; Select between brackets
    [:editor "alt-s" :editor.sublime.selectBetweenBrackets]
]
